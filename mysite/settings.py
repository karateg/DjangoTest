"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from django.urls import reverse_lazy
from pathlib import Path
from django.utils.translation import gettext_lazy as _
import os 

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-8dd5b1js@dfmmrl@r#eb6cbj$1w^%t8onzq-e#h089het3$12-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "0.0.0.0",
    "127.0.0.1",
]



INTERNAL_IPS = [
    '127.0.0.1'
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.admindocs',
    
    'shopapp.apps.ShopappConfig',
    'request_app.apps.RequestAppConfig',
    'test_auth.apps.AuthConfig',
    'test_api.apps.TestApiConfig',
    'market.apps.MarketConfig',
    'cart.apps.CartConfig',

    'debug_toolbar',
    'rest_framework',
    'django_filters',
    'drf_spectacular'
]

MIDDLEWARE = [
    # 'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.admindocs.middleware.XViewMiddleware',
    # 'django.middleware.cache.FetchFromCacheMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    

    # 'request_app.middlewares.set_useragent_middleware',
    'request_app.middlewares.CountRequestsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'cart.context_pocessor.cart',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': BASE_DIR / 'var/temp/django_cash',
        # 'LOCATION': 'F:/django_text',
    }
}


CACHE_MIDDLEWARE_SECONDS = 100

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

LOCALE_PATHS = [
    BASE_DIR / 'locale',
]

USE_TZ = True

LANGUAGES = [
    ('en', _('English')),
    ('ru', _('Russian')),
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = reverse_lazy('test_auth:profile')
LOGIN_URL = reverse_lazy('test_auth:login')


REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
    ],
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

SPECTACLAR_SETTINGS = {
    'TITLE': 'My site with API',
    'DESCRIPTION': '12334',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
}

CART_SESSION_ID = 'cart'

# LOG_LEVEL = os.environ.get('LOG_LEVEL')
LOG_LEVEL = 'WARNING'

LOG_FILE_NAME = BASE_DIR / 'logging' / 'logs.log'
LOG_FILE_NAME.parent.mkdir(exist_ok=True)
LOG_FILE_SIZE = 1024 * 1024 * 3
LOG_FILE_COUNT = 30

SYSTEM = os.name
FILE_HANDLER = 'file_loging_windows' if SYSTEM == 'nt' else 'file_loging_not_windows'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'main_format': {
            'format': '%(asctime)s: [%(levelname)s] {%(name)s}: %(message)s',
        },
        'simple_format':{
            'format': '[%(levelname)s]: %(message)s'
        }
    },
    'handlers': {
        'console': {
            'level': LOG_LEVEL,
            'class': 'logging.StreamHandler',
            'formatter': 'simple_format',
        },
        # NotWindows
        'file_loging_not_windows':{
            'level': LOG_LEVEL,
            'class': 'logging.handlers.TimedRotatingFileHandler', 
            'formatter': 'main_format',
            'filename': LOG_FILE_NAME,
            'when': 'midnight',
            'interval': 1,
            'backupCount': LOG_FILE_COUNT,
        },
        # Windows
        'file_loging_windows':{
            'level': LOG_LEVEL,
            'class': 'concurrent_log_handler.ConcurrentRotatingFileHandler', 
            'formatter': 'main_format',
            'filename': LOG_FILE_NAME,
            'maxBytes': LOG_FILE_SIZE,
            'backupCount': LOG_FILE_COUNT,
        },
    },
    'root': {
        'handlers': [
                'console',
                FILE_HANDLER,
           ],
        'level': LOG_LEVEL,
    },
}
